---
- hosts: all
  remote_user: "{{ user }}"
  pre_tasks:

  - name: update cache (Ubuntu)
    tags: update,ubuntu
    apt:
      update_cache: yes
    changed_when: false
    when: ansible_distribution == "Ubuntu"

  - name: install package updates and upgrade (AMI)
    tags: update,upgrade,ami
    yum:
      name: "*"
      state: latest
      update_cache: yes
      exclude: kernel*
    changed_when: false
    when: ansible_distribution == "Amazon"


- hosts: workstations
  remote_user: "{{ user }}"
  tasks:

  - name: install unzip
    package:
      name: unzip

  - name: install terraform
    unarchive:
      src: https://releases.hashicorp.com/terraform/0.12.28/terraform_0.12.28_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes
      mode: 0755
      owner: root
      group: root


- hosts: web_servers
  remote_user: "{{ user }}"
  tasks:

  - name: install apache and php (Ubuntu)
    tags: apache,ubuntu,php
    apt:
      name:
        - apache2
        - libapache2-mod-php
      state: latest
    when: ansible_distribution == "Ubuntu"

  - name: start apache
    tags: apache,ubuntu,start_apache,service
    service:
      name: apache2
      state: started
      enabled: yes
    when: ansible_distribution == "Ubuntu"

  - name: install apache and php (AMI)
    tags: apache,php,httpd,ami
    yum:
      name:
        - httpd
        - php
      state: latest
    when: ansible_distribution == "Amazon"

  - name: change admin email-address
    tags: apache,ami,httpd
    lineinfile:
      path: /etc/httpd/conf/httpd.conf
      regexp: "^ServerAdmin"
      line: ServerAdmin c2oziri@gmail.com
    when: ansible_distribution == "Amazon"
    register: httpd

  - name: restart httpd (ami)
    tags: apache,ami,httpd
    service:
      name: httpd
      state: restarted
    when: httpd.changed

  - name: copy default website html file
    tags: apache,apache2,httpd
    copy:
      src: default_site.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644

  - name: start httpd
    tags: apache,ami,start_httpd,service
    service:
      name: httpd
      state: started
      enabled: yes
    when: ansible_distribution == "Amazon"


- hosts: db_servers
  remote_user: "{{ user }}"
  tasks:

  - name: install mariadb (Ubuntu)
    tags: db,ubuntu
    apt:
      name: mariadb-server
      state: latest
    when: ansible_distribution == "Ubuntu"


- hosts: file_servers
  remote_user: "{{ user }}"
  tasks:

  - name: install samba (all)
    tags: samba
    package:
      name: samba
      state: latest
